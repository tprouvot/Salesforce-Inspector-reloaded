import{RequestTransport as t}from"./RequestTransport.js";export class LongPollingTransport extends t{#a=!0;accept(t,s,e){return this.#a||!s}#b(){return new window.XMLHttpRequest}#c(s){try{s.context=this.context}catch(e){this.debug("Could not copy transport context into XHR",e)}}xhrSend(t){let s=this.#b();this.#c(s),s.withCredentials=!0,s.open("POST",t.url,!0!==t.sync);let e=t.headers;if(e)for(let r in e)e.hasOwnProperty(r)&&s.setRequestHeader(r,e[r]);return s.setRequestHeader("Content-Type","application/json"),s.onload=()=>{200===s.status?t.onSuccess(s.responseText):t.onError(s.statusText)},s.onabort=s.onerror=()=>{t.onError(s.statusText)},s.send(t.body),s}transportSend(t,s){this.debug("Transport",this.type,"sending request",s.id,"envelope",t);try{let e=!0;return s.xhr=this.xhrSend({transport:this,url:t.url,sync:t.sync,headers:this.configuration.requestHeaders,body:this.convertToJSON(t.messages),onSuccess:e=>{this.debug("Transport",this.type,"received response",e);let r=!1;try{let o=this.convertToMessages(e);0===o.length?(this.#a=!1,this.transportFailure(t,s,{httpCode:204})):(r=!0,this.transportSuccess(t,s,o))}catch(n){if(this.debug(n),!r){this.#a=!1;let i={exception:n};i.httpCode=this.xhrStatus(s.xhr),this.transportFailure(t,s,i)}}},onError:(r,o)=>{this.debug("Transport",this.type,"received error",r,o),this.#a=!1;let n={reason:r,exception:o};n.httpCode=this.xhrStatus(s.xhr),e?this.setTimeout(()=>{this.transportFailure(t,s,n)},0):this.transportFailure(t,s,n)}}),e=!1,!0}catch(r){return this.debug("Transport",this.type,"exception:",r),this.#a=!1,this.setTimeout(()=>{this.transportFailure(t,s,{exception:r})},0),!1}}reset(t){super.reset(t),this.#a=!0}}
