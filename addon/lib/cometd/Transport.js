export class Transport{#a;#b;#c;registered(t,e){this.#a=t,this.#b=e}unregistered(){this.#a=null,this.#b=null}get cometd(){return this.#b}notifyTransportTimeout(t){let e=this.cometd._getTransportListeners("timeout");if(e)for(let r=0;r<e.length;++r){let i=e[r];try{let o=i.call(this,t);if("number"==typeof o&&o>0)return o}catch(n){this.cometd._info("Exception during execution of transport listener",i,n)}}return 0}debug(){this.cometd._debug.apply(this.cometd,arguments)}get configuration(){return this.cometd.getConfiguration()}get advice(){return this.cometd.getAdvice()}setTimeout(t,e){return this.cometd.setTimeout(t,e)}clearTimeout(t){this.cometd.clearTimeout(t)}convertToJSON(t){let e=this.configuration.maxSendBayeuxMessageSize,r="[";for(let i=0;i<t.length;++i){i>0&&(r+=",");let o=t[i],n=JSON.stringify(o);if(n.length>e)throw Error("maxSendBayeuxMessageSize "+e+" exceeded");r+=n}return r+"]"}convertToMessages(t){if(null==t)return[];if("string"==typeof t||t instanceof String)try{return JSON.parse(t)}catch(e){throw this.debug("Could not convert to JSON the following string:",t),e}if(Array.isArray(t))return t;if(t instanceof Object)return[t];throw Error("Conversion Error "+t+", typeof "+typeof t)}accept(t,e,r){throw Error("Abstract")}get type(){return this.#a}get url(){return this.#c}set url(t){this.#c=t}send(t,e){throw Error("Abstract")}reset(t){this.debug("Transport",this.type,"reset",t?"initial":"retry")}abort(){this.debug("Transport",this.type,"aborted")}toString(){return this.type}}
